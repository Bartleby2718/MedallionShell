version: 1.0.{build}

image: 
  - Visual Studio 2022
  - Ubuntu2204

environment:
  nodejs_version: "20"

# before_build:
  # - which pwsh  # /usr/bin/pwsh
  # - which git # /usr/bin/git
  # - which docker # /usr/bin/docker
  # - which dotnet # /usr/bin/dotnet
  # - which node # /home/appveyor/.nvm/versions/node/v16.20.2/bin/node
  # - which go # /home/appveyor/.gvm/gos/go1.22.0/bin/go
  # - which clang # /usr/bin/clang
  # - which gcc # /usr/bin/gcc
  # - which ruby # /home/appveyor/.rbenv/shims/ruby
  # - which python3 # /usr/bin/python3
  # - which pip3 # /usr/local/bin/pip3
  # - which yarn # /usr/bin/yarn
  # - which wget # /usr/bin/wget
  # - which curl # /usr/bin/curl
  # - which cmake # /usr/bin/cmake
  # - which mysql # /usr/bin/mysql
  # - which firefox # /usr/bin/firefox
  # - pwsh --version # PowerShell 7.4.1
  # - git --version # git version 2.43.2
  # - docker --version # Docker version 25.0.3, build 4debf41
  # - dotnet --version # 8.0.200
  # - node --version # v16.20.2
  # - go version # go version go1.22.0 linux/amd64
  # - clang --version 
  # Ubuntu clang version 13.0.1-2ubuntu2.2
  # Target: x86_64-pc-linux-gnu
  # Thread model: posix
  # InstalledDir: /usr/bin
  # - gcc --version
  # gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
  # Copyright (C) 2021 Free Software Foundation, Inc.
  # This is free software; see the source for copying conditions.  There is NO
  # warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  # - ruby --version
  #   rbenv: ruby: command not found
  # The `ruby' command exists in these Ruby versions:
  #   2.6.10
  #   2.7.8
  #   3.0.6
  #   3.1.4
  #   3.2.3
  # - python3 --version # Python 3.10.12
  # - pip3 --version # pip 24.0 from /usr/local/lib/python3.10/dist-packages/pip (python 3.10)
  # - yarn --version # 1.22.19
  # - wget --version
# GNU Wget 1.21.2 built on linux-gnu.
# -cares +digest -gpgme +https +ipv6 +iri +large-file -metalink +nls 
# +ntlm +opie +psl +ssl/openssl 
# Wgetrc: 
#     /etc/wgetrc (system)
# Locale: 
#     /usr/share/locale 
# Compile: 
#     gcc -DHAVE_CONFIG_H -DSYSTEM_WGETRC="/etc/wgetrc" 
#     -DLOCALEDIR="/usr/share/locale" -I. -I../../src -I../lib 
#     -I../../lib -Wdate-time -D_FORTIFY_SOURCE=2 -DHAVE_LIBSSL -DNDEBUG 
#     -g -O2 -ffile-prefix-map=/build/wget-8g5eYO/wget-1.21.2=. 
#     -flto=auto -ffat-lto-objects -flto=auto -ffat-lto-objects 
#     -fstack-protector-strong -Wformat -Werror=format-security 
#     -DNO_SSLv2 -D_FILE_OFFSET_BITS=64 -g -Wall 
# Link: 
#     gcc -DHAVE_LIBSSL -DNDEBUG -g -O2 
#     -ffile-prefix-map=/build/wget-8g5eYO/wget-1.21.2=. -flto=auto 
#     -ffat-lto-objects -flto=auto -ffat-lto-objects 
#     -fstack-protector-strong -Wformat -Werror=format-security 
#     -DNO_SSLv2 -D_FILE_OFFSET_BITS=64 -g -Wall -Wl,-Bsymbolic-functions 
#     -flto=auto -ffat-lto-objects -flto=auto -Wl,-z,relro -Wl,-z,now 
#     -lpcre2-8 -luuid -lidn2 -lssl -lcrypto -lz -lpsl ftp-opie.o 
#     openssl.o http-ntlm.o ../lib/libgnu.a 
# Copyright (C) 2015 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later
# <http://www.gnu.org/licenses/gpl.html>.
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
# Originally written by Hrvoje Niksic <hniksic@xemacs.org>.
# Please send bug reports and questions to <bug-wget@gnu.org>.

  # - curl --version
  # curl 7.81.0 (x86_64-pc-linux-gnu) libcurl/7.81.0 OpenSSL/3.0.2 zlib/1.2.11 brotli/1.0.9 zstd/1.4.8 libidn2/2.3.2 libpsl/0.21.0 (+libidn2/2.3.2) libssh/0.9.6/openssl/zlib nghttp2/1.43.0 librtmp/2.3 OpenLDAP/2.5.16
  # Release-Date: 2022-01-05
  # Protocols: dict file ftp ftps gopher gophers http https imap imaps ldap ldaps mqtt pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp 
  # Features: alt-svc AsynchDNS brotli GSS-API HSTS HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets zstd
  # - cmake --version
  # cmake version 3.27.1
  # CMake suite maintained and supported by Kitware (kitware.com/cmake).
  # - mysql --version # mysql  Ver 8.0.36-0ubuntu0.22.04.1 for Linux on x86_64 ((Ubuntu))

build_script:
  # on linux, it seems like msbuild goes parallel such that if we don't build ProcessSignaler first, we won't have the net45 binary
  # to pack into the non-net45 builds
  - dotnet build MedallionShell.ProcessSignaler/MedallionShell.ProcessSignaler.csproj -c Release
  - dotnet build MedallionShell.sln -c Release

for: 
  - 
    matrix: 
      only: 
        - 
          image: "Visual Studio 2022"
    test_script:
      # Unconditionally collect test rest afterwards
      - dotnet test MedallionShell.sln -c Release --no-build --logger:"nunit;LogFilePath=TestResult.xml" & appveyor PushArtifact TestResult.xml

  - 
    matrix: 
      only: 
        - 
          image: Ubuntu2204
    test_script:
      # Unconditionally collect test rest afterwards
      - echo DOTNET TEST
      # The active test run was aborted. Reason: Test host process crashed
      # - dotnet test MedallionShell.sln -c Release -f net6.0 --no-build --logger:"nunit;LogFilePath=TestResult.net6.0.xml"; appveyor PushArtifact TestResult.net6.0.xml
      - dotnet test MedallionShell.sln -c Release -f net8.0 --no-build --logger:"nunit;LogFilePath=TestResult.net8.0.xml"; appveyor PushArtifact TestResult.net8.0.xml
      # test mono via the NUnit console runner
      - nuget install NUnit.Console -Version 3.17.0 -OutputDirectory testrunner -Source https://api.nuget.org/v3/index.json
      - echo MONO NETCORE
      - mono ./testrunner/NUnit.ConsoleRunner.3.17.0/tools/nunit3-console.exe ./MedallionShell.Tests/bin/Release/net6.0/MedallionShell.Tests.dll
      - mono ./testrunner/NUnit.ConsoleRunner.3.17.0/tools/nunit3-console.exe ./MedallionShell.Tests/bin/Release/net8.0/MedallionShell.Tests.dll
      - echo MONO NETFRAMEWORK
      - mono ./testrunner/NUnit.ConsoleRunner.3.17.0/tools/nunit3-console.exe ./MedallionShell.Tests/bin/Release/net462/MedallionShell.Tests.dll